/* SLIDE 12 - Adaptando a versão SQL padrão para o Postgre */

create table professores (
	matricula int primary key,
	nome varchar(50),
	nro_turmas int
)

create table turmas (
	disciplina varchar(10),
	codigo varchar(10),
	vagas int,
	professor int,
	primary key (disciplina, codigo),
		foreign key (professor) references professores(matricula)
)

insert into professores values
(01, 'Maria', 0),
(02, 'João', 0)

/* Criar função de inserção para utilizar no TRIGGER */
create or replace function funcao_atualiza_turmas()
returns trigger as $$
begin
	update professores
	set nro_turmas = nro_turmas + 1
	where matricula = new.professor;
	return null;
end;	
$$ language 'plpgsql';

/* Executa o trigger */
create trigger atualiza_nro_turmas 
after insert on turmas
for each row
execute procedure funcao_atualiza_turmas();


/* Criar função de remoção para utilizar no TRIGGER */
create or replace function funcao2_atualiza_turmas()
returns trigger as $$
begin 
	update professores
	set nro_turmas = nro_turmas - 1
	where matricula = OLD.professor;
	return null;
end;
$$ language 'plpgsql';

/* Executa o trigger */
create trigger atualiza_nro_turmas2 
after delete on turmas 
for each row
execute procedure funcao2_atualiza_turmas();



/* Verifica o estado das tabelas antes de incluir registros na tabela turmas */
select * from professores
select * from turmas


/*Insere registros na tabela turmas */
insert into turmas values 
('COM230', 'CCO_2017_1', 25, 02)


/* Verifica o estado das tabelas depois da inclusao registros na tabela turmas */
select * from turmas
select * from professores

-------------->Pode se verificar que o numero de turmas do professor Joao já foi alterado





/*****************************************************************************/
/* Criar um trigger para quando o professor de uma turma for alterado;
ou seja realizar as duas funções(INSERÇÃO E REMOÇÃO) em uma só. */

create or replace function atualiza_nro_turmas()
returns trigger as $$
begin 
	if(tg_op = 'INSERT') then
		UPDATE professores SET nro_turmas = nro_turmas + 1 WHERE matricula = NEW.professor;
	elseif (tg_op = 'DELETE') then
		UPDATE professores SET nro_turmas = nro_turmas - 1 WHERE matricula = OLD.professor;
	elseif ((tg_op = 'UPDATE') and (old.professor != new.professor)) then
		UPDATE professores SET nro_turmas = nro_turmas - 1 WHERE matricula = OLD.professor;
		UPDATE professores SET nro_turmas = nro_turmas + 1 WHERE matricula = NEW.professor;
	return null;
end;
$$ language 'plpgsql';

create trigger tr_atualiza_nro_turmas
after insert or delete or update on turmas
for each row
execute procedure atualiza_nro_turmas();